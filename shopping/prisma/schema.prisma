// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../app/generated/prisma"
}


datasource db {
  provider = "sqlite" 
  url      = env("DATABASE_URL") 
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  name      String
  password  String   // Hashed by Better Auth
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  // Relations - All actions require authentication
  productsListed Product[]  @relation("SellerProducts")
  productsBought Purchase[] @relation("BuyerPurchases")
}
model Product {
  id          String   @id @default(cuid())
  title       String
  description String
  price       Float    // Store in dollars (e.g., 19.99)
  imageUrl    String?  // Optional - can add later
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  
  // REQUIRED seller - No products without authenticated users
  sellerId String
  seller   User      @relation("SellerProducts", fields: [sellerId], references: [id], onDelete: Cascade)
  
  // Track all purchases of this product
  purchases Purchase[]
}

model Purchase {
  id              String   @id @default(cuid())
  stripePaymentId String   @unique // Prevents duplicate purchases
  amount          Float    // Store purchase price (in case product price changes)
  createdAt       DateTime @default(now())
  
  // REQUIRED buyer - No purchases without authenticated users
  buyerId String
  buyer   User    @relation("BuyerPurchases", fields: [buyerId], references: [id], onDelete: Cascade)
  
  // REQUIRED product - What was purchased
  productId String
  product   Product @relation(fields: [productId], references: [id], onDelete: Cascade)
  
  @@index([buyerId])
  @@index([productId])
}